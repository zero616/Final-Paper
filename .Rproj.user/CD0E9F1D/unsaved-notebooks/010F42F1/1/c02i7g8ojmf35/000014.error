{"frames":[{"func":"table %>% rowwise() %>% mutate(extracted_info = list(extract_info(text_column))) %>% \n    unnest(extracted_info) %>% clean_names()","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"clean_names(.)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"unnest(., extracted_info)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mutate(., extracted_info = list(extract_info(text_column)))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rowwise(.)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rowwise.data.frame(.)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rowwise_df(data, vars)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"as_tibble(data)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"as_tibble.data.frame(data)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"lst_to_tibble(unclass(x), .rows, .name_repair)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"set_repaired_names(x, repair_hint = TRUE, .name_repair, call = call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"repaired_names(names2(x), repair_hint, .name_repair = .name_repair, \n    quiet = quiet, call = call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"subclass_name_repair_errors(name = name, details = details, repair_hint = repair_hint, \n    vec_as_names(name, repair = .name_repair, quiet = quiet || \n        !is_character(.name_repair)), call = call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(expr, vctrs_error_names_cannot_be_empty = function(cnd) {\n    abort_column_names_cannot_be_empty(detect_empty_names(name), \n        details = details, parent = cnd, repair_hint = repair_hint, \n        call = call) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"vec_as_names(name, repair = .name_repair, quiet = quiet || !is_character(.name_repair))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function () \nvalidate_unique(names = names, arg = arg, call = call))()","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"validate_unique(names = names, arg = arg, call = call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop_names_must_be_unique(names, arg, call = call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop_names(class = \"vctrs_error_names_must_be_unique\", arg = arg, \n    names = names, call = call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop_vctrs(class = c(class, \"vctrs_error_names\"), ..., call = call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"abort(message, class = c(class, \"vctrs_error\"), ..., call = call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd, .file)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signalCondition(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function (cnd) \n{\n    abort_column_names_must_be_unique(detect_duplicates(name), \n        parent = cnd, repair_hint = repair_hint, call = call) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"abort_column_names_must_be_unique(detect_duplicates(name), parent = cnd, \n    repair_hint = repair_hint, call = call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tibble_abort(invalid_df(\"must not be duplicated\", names, use_repair(repair_hint), \n    message = \"Column name(s)\"), names = names, parent = parent, \n    call = call)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"abort(x, class, ..., call = call, parent = parent, use_cli_format = TRUE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd, .file)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in as_tibble(data) : \u001B[38;5;232m\nUse `.name_repair` to specify repair.\u001B[39m\n\u001B[1mCaused by error in `repaired_names()`:\u001B[22m\n\u001B[33m!\u001B[39m Names must be unique.\n\u001B[31mâœ–\u001B[39m These names are duplicated:\n  * \"Term of office\" at locations 5, 6, and 7.\n"}